@model BetterThanMooshak.Models.ViewModel.UsersViewModel
@{
    ViewBag.Title = "User Overview";
}
<div class="boxTitle">
    <h1>User Overview</h1>
</div>
<div class="boxText">
    @Html.Partial("_ViewBagAlerts")
    <div class="userActions btn-group bottom20">
        <a href="@Url.Action("add", "user")" class="btn btn-default">
            <i class="fa fa-plus-square"></i>
            Add User
        </a>
        @using (Html.BeginForm("import", "user", FormMethod.Post, new {@class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.TextBoxFor(m => m.inputFileBase, new { type = "file"})

            <input type="submit" />

        }
        <a class="btn btn-default" id="chooseFile">
            <i class="fa fa-file"></i>
            Choose File
        </a>
        <a class="btn btn-default" id="importFile">
            <i class="fa fa-download"></i>
            Import File
        </a>
        <a href="@Url.Action("sendemailvalidation", "user")" class="btn btn-default">
            <i class="fa fa-envelope"></i>
            Send Verification
        </a>
        <div class="form-search left20">
            <input id="userSearch" type="text" placeholder="Search..." class="form-control searchingFilter" />
        </div>
        @using (Html.BeginForm("import", "user", FormMethod.Post, new { @class = "form-horizontal hidden", role = "form", enctype = "multipart/form-data", id = "importForm" }))
        {
            @Html.TextBoxFor(m => m.inputFileBase, new { @class = "", type = "file", id = "importField" })
        }
    </div>
    @Html.AntiForgeryToken()
    <table id="userTable" class="table table-responsive table-hover">
        <thead>
            <tr>
                <td><h4>Name</h4></td>
                <td><h4>Email</h4></td>
                <td class="text-center"><h4>Confirmed</h4></td>
                <td class="text-center"><h4>Active</h4></td>
                <td class="text-center"><h4>Actions</h4></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var user in Model.users)
            {
                <tr class="searching">
                    <td>@user.Name</td>
                    <td>@user.Email</td>
                    <td class="text-center">
                    @{ if (user.EmailConfirmed)
                        {
                            <a class="activate active" href="@Url.Action("emailconfirm", "user", new { id = user.Id })" >
                                <i class="fa fa-check-square" title="@user.Name has confirmed the Email"></i>
                            </a>
                        }
                        else
                        {
                            <a class="deactivate active" href="@Url.Action("emailconfirm", "user", new { id = user.Id })" >
                                <i class="fa fa-square" title="@user.Name has not confirmed the Email"></i>
                            </a>
                        }

                    }
                    </td>
                    <td class="text-center">
                    @{ if (user.Active)
                        {
                            <a class="remove" href="@Url.Action("active", "user", new { id = user.Id })">
                                <i class="fa fa-toggle-on" title="Deactivate @user.Name"></i>
                            </a>
                        }
                        else
                        {
                            <a class="activate" href="@Url.Action("active", "user", new { id = user.Id })">
                                <i class="fa fa-toggle-off" title="Activate @user.Name"></i>
                            </a>
                        }
                    }
                    </td>
                    <td class="text-center">
                        <a class="edit" href="@Url.Action("edit", "user", new { id = @user.Id })">
                            <i class="fa fa-pencil-square" title="Edit @user.Name"></i>
                        </a>
                        @{ if (user.Removable())
                            {
                                <a class="remove" href="@Url.Action("remove", "user", new { id = user.Id })">
                                    <i class="fa fa-minus-square" title="Remove @user.Name"></i>
                                </a>
                            }
                            else
                            {
                                <span class="remove">
                                    <i class="fa fa-minus-square" title="Can not remove @user.Name, user already in a Course"></i>
                                </span>
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


